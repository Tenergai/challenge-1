package org.engcia;

import org.engcia.model.Evidence;
import org.engcia.model.Hypothesis;
import org.engcia.model.Conclusion;
import org.engcia.model.Fact;

import function org.engcia.view.UI.answer;



rule "R1: Ratio greater than 1"
    when
        eval(answer("Ratio greater than 1", "yes"))
    then
        Hypothesis h = new Hypothesis("R", "greater");
        insert(h);
end

rule "R2: Ratio equal or less than 1"
    when
        eval(answer("Ratio greater than 1", "no"))
    then
        Hypothesis h = new Hypothesis("R", "equal or less");
        insert(h);
end

rule "R3: Ratio greater than 1 and Predicted Energy Scarcity"
    when
        Hypothesis(description == "R", value == "greater")
        eval(answer("predicted energy scarcity", "yes"))
    then
        Hypothesis h = new Hypothesis("predicted energy scarcity", "true");
        insert(h);
end

rule "R4: Ratio greater than 1 and Not Predicted Energy Scarcity"
    when
        Hypothesis(description == "R", value == "greater")
        eval(answer("predicted energy scarcity", "no"))
    then
        Hypothesis h = new Hypothesis("predicted energy scarcity", "false");
        insert(h);
end

rule "R5: Ratio greater than 1 and PES and Battery Sufficiently Charged"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "predicted energy scarcity", value == "true")
        eval(answer("battery sufficiently charged", "no"))
    then
        Conclusion c = new Conclusion(Conclusion.CHARGE_BATTERY);
        insert(c);
end

rule "R6: Ratio greater than 1 and PES and Not Battery Sufficiently Charged"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "predicted energy scarcity", value == "true")
        eval(answer("battery sufficiently charged", "yes"))
    then
        Hypothesis h = new Hypothesis("battery sufficiently charged", "true");
        insert(h);
end

rule "R7.1: Ratio greater than 1 and Battery Sufficiently Charged and Community Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "battery sufficiently charged", value == "true")
        eval(answer("community demand", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.SELL_COMMUNITY_MARKET);
        insert(c);
end

rule "R7.2: Ratio greater than 1 and Battery Sufficiently Charged and not Community Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "battery sufficiently charged", value == "true")
        eval(answer("community demand", "no"))
    then
        Hypothesis h = new Hypothesis("community demand", "false");
        insert(h);
end

rule "R8.1: Ratio greater than 1 and not PES and Community Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "predicted energy scarcity", value == "false")
        eval(answer("community demand", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.SELL_COMMUNITY_MARKET);
        insert(c);
end

rule "R8.2: Ratio greater than 1 and not PES and not Community Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "predicted energy scarcity", value == "false")
        eval(answer("community demand", "no"))
    then
        Hypothesis h = new Hypothesis("community demand", "false");
        insert(h);
end

rule "R9: Ratio greater than 1 and Not Community Demand and External Market Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "community demand", value == "false")
        eval(answer("external market demand", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.SELL_EXTERNAL_MARKET);
        insert(c);
end

rule "R10: Ratio greater than 1 and Not Community Demand and External Market Demand"
    when
        Hypothesis(description == "R", value == "greater")
        Hypothesis(description == "community demand", value == "false")
        eval(answer("external market demand", "no"))
    then
        Conclusion c = new Conclusion(Conclusion.SEND_GRID);
        insert(c);
end


rule "R11: R equal or less than 1 and Currently in Energy Scarcity"
    when
        Hypothesis(description == "R", value == "equal or less")
        eval(answer("currently in energy scarcity", "yes"))
    then
        Hypothesis h = new Hypothesis("currently in energy scarcity", "true");
        insert(h);
end

rule "R12: R equal or less than 1 and Not Currently in Energy Scarcity"
    when
        Hypothesis(description == "R", value == "equal or less")
        eval(answer("currently in energy scarcity", "no"))
    then
        Hypothesis h = new Hypothesis("currently in energy scarcity", "false");
        insert(h);
end

rule "R13: Currently in Energy Scarcity and Batteries are charged"
    when
        Hypothesis(description == "currently in energy scarcity", value == "true")
        eval(answer("batteries are charged", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.USE_BATTERY);
        insert(c);
end

rule "R14: Currently in Energy Scarcity and Batteries are not charged"
    when
        Hypothesis(description == "currently in energy scarcity", value == "true")
        eval(answer("batteries are charged", "no"))
    then
        Hypothesis h = new Hypothesis("batteries are charged", "false");
        insert(h);
end

rule "R15.1: Not Currently in Energy Scarcity and no Participant with surplus"
    when
        Hypothesis(description == "currently in energy scarcity", value == "false")
        eval(answer("participants with surplus", "no"))
    then
        //participants with surplus?
        Hypothesis h = new Hypothesis("participants with surplus", "false");
        insert(h);
end

rule "R15.2: Not Currently in Energy Scarcity and Participant with surplus"
    when
        Hypothesis(description == "currently in energy scarcity", value == "false")
        eval(answer("participants with surplus", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.BALANCE_R);
        insert(c);
end


rule "R16.1: Batteries are not charged and no Participant with surplus"
    when
        Hypothesis(description == "batteries are charged", value == "false")
        eval(answer("participants with surplus", "no"))
    then
        Hypothesis h = new Hypothesis("participants with surplus", "false");
        insert(h);
end

rule "R16.2: Batteries are not charged and Participant with surplus"
    when
        Hypothesis(description == "batteries are charged", value == "false")
        eval(answer("participants with surplus", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.BALANCE_R);
        insert(c);
end

rule "R16: Not Participant with surplus and Predicted Energy Scarcity"
    when
        Hypothesis(description == "participants with surplus", value == "false")
        eval(answer("predicted energy scarcity", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.ADJUST_THRESHOLD);
        insert(c);
end

rule "R17: Not Participant with surplus and Not Predicted Energy Scarcity"
    when
        Hypothesis(description == "participants with surplus", value == "false")
        eval(answer("predicted energy scarcity", "no"))
    then
        Hypothesis h = new Hypothesis("predicted energy scarcity", "false");
        insert(h);
end

rule "R18: Not Predicted Energy Scarcity and Expensive Hour"
    when
        Hypothesis(description == "predicted energy scarcity", value == "false")
        eval(answer("expensive hour", "yes"))
    then
        Hypothesis h = new Hypothesis("expensive hour", "true");
        insert(h);
end

rule "R19: Not Predicted Energy Scarcity and Not Expensive Hour"
    when
        Hypothesis(description == "predicted energy scarcity", value == "false")
        eval(answer("expensive hour", "no"))
    then
        Conclusion c = new Conclusion(Conclusion.BUY_EXTERNAL_MARKET);
        insert(c);
end

rule "R20: Expensive Hour and Sufficiently Charged Battery"
    when
        Hypothesis(description == "expensive hour", value == "true")
        eval(answer("sufficiently charged battery", "yes"))
    then
        Conclusion c = new Conclusion(Conclusion.USE_BATTERY);
        insert(c);
end

rule "R20: Expensive Hour and Not Sufficiently Charged Battery"
    when
        Hypothesis(description == "expensive hour", value == "true")
        eval(answer("sufficiently charged battery", "no"))
    then
        Conclusion c = new Conclusion(Conclusion.BUY_EXTERNAL_MARKET);
        insert(c);
end