

FUNCTION_BLOCK scarcity	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	wind_power : REAL;
	solar_power : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	scarcity_level : REAL;
END_VAR

FUZZIFY wind_power			// Fuzzify input variable 'psa': {'low', 'medium' , 'high'}
	TERM none := (0, 1) (0, 0) ;
	TERM low := (0, 0) (4,1) (8,0) ;
	TERM medium := (4, 0) (8, 1) (60, 1);
	TERM high := (4, 0) (8, 1) (60, 1);
END_FUZZIFY

FUZZIFY solar_power			// Fuzzify input variable 'sd': { 'slow', 'medium', 'fast' }
	TERM none := (0, 1) (4, 0) ;
    TERM low := (0, 0) (4,1) (8,0) ;
    TERM medium := (4, 0) (8, 1) (60, 1);
    TERM high := (4, 0) (8, 1) (60, 1);
END_FUZZIFY

DEFUZZIFY sl			// Defuzzify output variable 'sl' : {'little', 'medium', 'much', 'much_more' }
	TERM little := (0, 1) (200, 1) (600, 0) ;
	TERM medium := (200, 0) (600, 1) (1000, 0) ;
	TERM high := (600, 0) (1000, 1) (1400, 0) ;
	TERM extreme := (1000, 0) (1400, 1) (1600, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF psa IS low AND sd IS slow THEN sl IS little;
	RULE 2 : IF psa IS low AND sd IS medium THEN sl IS medium; 
	RULE 3 : IF psa IS low AND sd IS fast THEN sl IS medium;
	RULE 4 : IF psa IS medium AND sd IS slow THEN sl IS little;
	RULE 5 : IF psa IS medium AND sd IS medium THEN sl IS medium;
	RULE 6 : IF psa IS medium AND sd IS fast THEN sl IS much;
	RULE 7 : IF psa IS high AND sd IS slow THEN sl IS much;
	RULE 8 : IF psa IS high AND sd IS medium THEN sl IS much;
	RULE 9 : IF psa IS high AND sd IS fast THEN sl IS much_more;
END_RULEBLOCK

END_FUNCTION_BLOCK

